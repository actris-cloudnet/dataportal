name: Node.js CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.16.3]
        python-version: [3.7]

    env:
      NODE_ENV: 'test' 
    steps:
    - name: Install Ubuntu dependencies
      run: sudo apt-get install fswatch zsh postgresql netcdf-bin nginx-light
    - name: Print versions
      run: |
        fswatch --version
        zsh --version
        psql --version
        ncdump
        nginx -v
    - name: Configure postgresql
      run: |
        sudo -u postgres createuser -d -r -s -w runner
        sudo cat /etc/postgresql/10/main/pg_hba.conf|sed 's/md5/trust/' > pg_hba.tmp
        sudo mv pg_hba.tmp /etc/postgresql/10/main/pg_hba.conf
        sudo service postgresql restart
    - name: Configure nginx
      run: |
        sudo chown -R runner /var/log/nginx
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Use Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }} 
    - name: Symlink Python 3
      run: |
        sudo ln -s `which python` /usr/local/bin/python3
        export PATH=/usr/local/bin$PATH
    - name: Checkout  
      uses: actions/checkout@v2
    - name: Install project
      run: ./control ci
    - name: Build project
      run: ./control build
    - name: Start backend and frontend
      run: ./control start
    - name: Run integration tests
      run: cd backend && npm test && cd ..
    - name: Run e2e tests
      run: cd backend && npm run e2e-test && cd ..
    - name: Print logs
      if: always()
      run: cat */tests/all.log
